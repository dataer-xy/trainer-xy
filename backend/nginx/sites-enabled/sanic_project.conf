
# worker_rlmit_nofile 65500; # 提升nginx的进程文件打开数
events{}
http{
    include  mime.types; # 启动之前，要将/usr/local/nginx/mime.types文件复制到该nginx.conf所在目录，并且必须使用绝对路径）
    

    proxy_connect_timeout 10;
    proxy_read_timeout 180;
    proxy_send_timeout 5;
    proxy_buffer_size 16k;
    proxy_buffers 4 32k;
    proxy_busy_buffers_size 96k;
    proxy_temp_file_write_size 96k;
    proxy_temp_path /tmp/temp_dir;
    proxy_cache_path /tmp/cache levels=1:2 keys_zone=cache_one:100m inactive=1d max_size=10g;


    # 负载均衡 -- uwsgi 的负载均衡怎么做？ TODO 
    upstream sanicweb-server {
        server 127.0.0.1:8000; # sanic服务所在的端口
    }


    # 后端机
    server{
        # 暴露给外部的端口 nginx一直监听这这里
        listen 70; # 默认的web访问端口
        
        # sever name
        server_name  www.saniccee.com;
        
        # charset
        charset utf-8;
        
        # 项目的根目录，如果没有wsgi,用这个，如果有wsgi 则需要转发一下端口
        # root /home/syy/projects/AnalysisCEESystem/webserver;
        
        access_log  /home/syy/projects/AnalysisCEESystem/log/nginx-access.log; # 服务器接收的请求日志，logs目录若不存在需要创建，否则nginx报错
        error_log  /home/syy/projects/AnalysisCEESystem/log/nginx-error.log; # 错误日志
        

        location / { 
            # # TODO: 这个地方可以用正则表达式
            # include /etc/nginx/uwsgi_params; # 这里是导入的uwsgi配置
            # # 外部访问8001就转发到内部8008
            # uwsgi_pass 127.0.0.1:8008; # 需要和ini文件中的端口保持一致，这样才能实现两者的通信。
            # uwsgi_read_timeout 2;
            proxy_pass http://sanicweb-server; # 转发到8000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
        }

    }
}





